function Snake.new 0
push constant 7
call Memory.alloc 1
pop pointer 0
push argument 4
pop this 2
push argument 0
push argument 2
push constant 2
call Math.divide 2
push this 2
call Math.multiply 2
add
push argument 1
push argument 3
push constant 2
call Math.divide 2
push this 2
call Math.multiply 2
add
push this 2
call Square.new 3
pop this 0
push this 0
push constant 0
call List.new 2
pop this 1
push argument 3
pop this 5
push argument 2
pop this 6
push argument 0
pop this 3
push argument 1
pop this 4
push pointer 0
return
function Snake.getHead 0
push argument 0
pop pointer 0
push this 0
return
function Snake.dispose 0
push argument 0
pop pointer 0
push this 1
call List.dispose 1
pop temp 0
push pointer 0
call Memory.deAlloc 1
pop temp 0
push constant 0
return
function Snake.removeTail 2
push argument 0
pop pointer 0
push this 1
pop local 0
push this 1
pop local 1
label WHILE_EXP0
push local 1
call List.getNext 1
push constant 0
eq
not
not
if-goto WHILE_END0
push local 1
pop local 0
push local 0
call List.getNext 1
pop local 1
goto WHILE_EXP0
label WHILE_END0
push local 1
call List.dispose 1
pop temp 0
push local 0
push constant 0
call List.setNext 2
pop temp 0
push constant 0
return
function Snake.selfCollision 2
push argument 0
pop pointer 0
push this 1
pop local 0
label WHILE_EXP0
push local 0
push constant 0
eq
not
not
if-goto WHILE_END0
push local 0
call List.getData 1
pop local 1
push local 1
call Square.getX 1
push argument 1
eq
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push local 1
call Square.getY 1
push argument 2
eq
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
not
return
label IF_FALSE1
label IF_FALSE0
push local 0
call List.getNext 1
pop local 0
goto WHILE_EXP0
label WHILE_END0
push constant 0
return
function Snake.addDown 2
push argument 0
pop pointer 0
push this 0
call Square.getX 1
pop local 0
push this 0
call Square.getY 1
pop local 1
push local 1
push this 2
add
pop local 1
push pointer 0
push local 0
push local 1
call Snake.selfCollision 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 4
push this 5
push constant 1
sub
push this 2
call Math.multiply 2
push constant 1
sub
add
push local 1
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push local 1
push this 2
call Square.new 3
pop this 0
push this 0
push this 1
call List.new 2
pop this 1
push constant 0
not
return
function Snake.addUp 2
push argument 0
pop pointer 0
push this 0
call Square.getX 1
pop local 0
push this 0
call Square.getY 1
pop local 1
push local 1
push this 2
sub
pop local 1
push pointer 0
push local 0
push local 1
call Snake.selfCollision 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 4
push local 1
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push local 1
push this 2
call Square.new 3
pop this 0
push this 0
push this 1
call List.new 2
pop this 1
push constant 0
not
return
function Snake.addLeft 2
push argument 0
pop pointer 0
push this 0
call Square.getX 1
pop local 0
push this 0
call Square.getY 1
pop local 1
push local 0
push this 2
sub
pop local 0
push pointer 0
push local 0
push local 1
call Snake.selfCollision 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 3
push local 0
gt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push local 1
push this 2
call Square.new 3
pop this 0
push this 0
push this 1
call List.new 2
pop this 1
push constant 0
not
return
function Snake.addRight 2
push argument 0
pop pointer 0
push this 0
call Square.getX 1
pop local 0
push this 0
call Square.getY 1
pop local 1
push local 0
push this 2
add
pop local 0
push pointer 0
push local 0
push local 1
call Snake.selfCollision 3
if-goto IF_TRUE0
goto IF_FALSE0
label IF_TRUE0
push constant 0
return
label IF_FALSE0
push this 3
push this 6
push constant 1
sub
push this 2
call Math.multiply 2
push constant 1
sub
add
push local 0
lt
if-goto IF_TRUE1
goto IF_FALSE1
label IF_TRUE1
push constant 0
return
label IF_FALSE1
push local 0
push local 1
push this 2
call Square.new 3
pop this 0
push this 0
push this 1
call List.new 2
pop this 1
push constant 0
not
return
